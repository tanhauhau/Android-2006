package com.ce2006.project.activity.appointment;

import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.DialogFragment;
import android.app.Fragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.Spinner;
import android.widget.TextView;

import com.ce2006.project.adapter.TimeslotArrayAdapter;
import com.ce2006.project.model.Appointment;
import com.ce2006.project.model.Timeslot;
import com.ce2006.project.server.AppointmentBuilder;
import com.example.user.ce2006_project.R;

import java.util.Calendar;

/**
 * Created by lhtan on 31/3/15.
 */
public class ModifyAppointmentFragment extends Fragment implements View.OnClickListener, DatePickerDialog.OnDateSetListener, AdapterView.OnItemSelectedListener {
    private Appointment appointment;
    private AppointmentBuilder builder;
    private Button btnChooseDate, btnSubmit;
    private Listener listener;
    private Spinner spinnerTime;
    private View progressBar;
    private boolean changed = false;
    private String timeString, dateString;

    public static ModifyAppointmentFragment getFragment(Appointment appointment, AppointmentBuilder builder) {
        ModifyAppointmentFragment fragment = new ModifyAppointmentFragment();
        fragment.appointment = appointment;
        fragment.builder = builder;
        return fragment;
    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        if (listener == null) {
            try {
                listener = (Listener) activity;
            } catch (Exception e) {
            }
        }
    }

    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        Timeslot timeslot = (Timeslot) parent.getSelectedItem();
        appointment.setTime(timeslot.getHour(), timeslot.getMin());
    }

    @Override
    public void onNothingSelected(AdapterView<?> parent) {
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_appointment_modify, null);
        TextView txtClinicName = (TextView) view.findViewById(R.id.txtClinicName);
        TextView txtDoctorName = (TextView) view.findViewById(R.id.txtDoctorName);
        spinnerTime = (Spinner) view.findViewById(R.id.spinnerTime);
        btnChooseDate = (Button) view.findViewById(R.id.btnChooseDate);
        btnSubmit = (Button) view.findViewById(R.id.btnSubmit);
        progressBar = view.findViewById(R.id.progressBar);

        txtClinicName.setText(appointment.getClinicName());
        txtDoctorName.setText(appointment.getDoctorName());
        btnSubmit.setOnClickListener(this);
        btnChooseDate.setOnClickListener(this);
        spinnerTime.setOnItemSelectedListener(this);

        updateDate();
        loadTimeSpinner(appointment.getYear(), appointment.getMonth(), appointment.getDate());

        timeString = appointment.getTimeString();
        dateString = appointment.getDateString();
        return view;
    }

    @Override
    public void onStop() {
        super.onStop();
        if (!changed) {
            appointment.setTimeString(timeString);
            appointment.setDateString(dateString);
        }
    }

    /**
     * set the initial value of the datePicker
     */
    private void updateDate() {
        final Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.YEAR, appointment.getYear());
        calendar.set(Calendar.MONTH, appointment.getMonth());
        calendar.set(Calendar.DAY_OF_MONTH, appointment.getDate());

        btnChooseDate.setTag(calendar);
        updateDateText(appointment.getYear(), appointment.getMonth(), appointment.getDate());
    }

    /**
     *
     * When submit button is clicked,
     * update the appointment, and inform the listeners
     *
     * When chooseDate button is clicked,
     * show a date picker dialog
     */
    @Override
    public void onClick(View v) {
        if (v == btnSubmit) {
            updateAppointment();
            listener.appointmentModified(appointment);
        } else if (v == btnChooseDate) {
            //show date picker dialog with selected date init with it
            DialogFragment datePickerFragment = DatePickerFragment.getDatePicker(this);
            datePickerFragment.setTargetFragment(this, 0);
            Bundle bundle = new Bundle();
            final Calendar cal = (Calendar) btnChooseDate.getTag();
            bundle.putInt(DatePickerFragment.YEAR, cal.get(Calendar.YEAR));
            bundle.putInt(DatePickerFragment.MONTH, cal.get(Calendar.MONTH));
            bundle.putInt(DatePickerFragment.DAY, cal.get(Calendar.DAY_OF_MONTH));
            datePickerFragment.setArguments(bundle);
            datePickerFragment.show(getFragmentManager(), "datePicker");
        }
    }

    private void updateAppointment() {
        changed = true;
        AppointmentTask task = new AppointmentTask(progressBar, new AppointmentTask.AppointmentTaskCommand() {
            @Override
            public Object execute() {
                return builder.updateAppointment(appointment);
            }
        }, new AppointmentTask.AppointmentTaskListener() {
            @Override
            public void taskStart(AppointmentTask task) {
            }

            @Override
            public void taskEnd(AppointmentTask task, Object obj) {

            }
        });
        task.execute();
    }

    @Override
    public void onDateSet(DatePicker view, int year, int month, int day) {
        Calendar c = Calendar.getInstance();
        c.set(year, month, day);
        btnChooseDate.setTag(c);
        updateDateText(year, month+1, day);
        appointment.setDate(year, month+1, day);

        //update spinner item
        loadTimeSpinner(year, month+1, day);
    }

    private void loadTimeSpinner(final int year, final int month, final int day) {
        AppointmentTask task = new AppointmentTask(progressBar, new AppointmentTask.AppointmentTaskCommand() {
            @Override
            public Object execute() {
                return builder.getTimeslot(appointment.getDoctor().getId(), year, month, day);
            }
        }, new AppointmentTask.AppointmentTaskListener() {
            @Override
            public void taskStart(AppointmentTask task) {
            }

            @Override
            public void taskEnd(AppointmentTask task, Object obj) {
                Timeslot[] timeslots = (Timeslot[]) obj;
                spinnerTime.setAdapter(new TimeslotArrayAdapter(getActivity(), timeslots));
                for (int i = 0; i < timeslots.length; i++) {
                    Timeslot t = timeslots[i];
                    if (t.getHour() == appointment.getHour() && t.getMin() == appointment.getMinute()) {
                        spinnerTime.setSelection(i);
                        break;
                    }
                }
            }
        });
        task.execute();
    }

    private void updateDateText(int year, int month, int day) {
        btnChooseDate.setText(new StringBuilder()
                .append(day).append("/")
                .append(month).append("/")
                .append(year));
    }

    public static interface Listener {
        void appointmentModified(Appointment appointment);
    }
}
